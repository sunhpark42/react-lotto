{"version":3,"sources":["constants/index.js","components/Main/PurchaseForm.js","utils/index.js","components/Main/LottoItem.js","components/Main/LottoListSection.js","components/Main/WinningNumberForm.js","utils/lottoUtils.js","components/Main/LotteryCountDown.js","components/Main/Main.js","components/Modal/ResultSection.js","components/Modal/EarningRateSection.js","components/Modal/ResultModal.js","App.js","reportWebVitals.js","index.js"],"names":["ID","PURCHASE_FORM","INPUT","WINNING_NUMBER_FORM","WINNING_NUMBER_FIELDSET","BONUS_NUMBER_FIELDSET","LOTTO_PRICE","LOTTO_VALUE","NUMBER_COUNT","MIN_NUMBER","MAX_NUMBER","RANK","FIRST","SECOND","THIRD","FOURTH","FIFTH","WINNING_PRIZE","MATCHED_COUNT","FORTH","PRIZE_BY_RANK","MESSAGE","INVALID_MONEY_UNIT","LOTTO_NOT_EXIST","DUPLICATED_WINNING_NUMBERS","ANNOUNCE_DATE","PurchaseForm","state","isActive","setLottoCount","count","props","onSubmitPurchaseForm","event","preventDefault","moneyInput","target","elements","valueAsNumber","isValidPrice","setState","alert","price","className","onSubmit","this","htmlFor","id","type","placeholder","min","required","disabled","Component","isDuplicatedArray","array","length","Set","size","getRandomNumber","max","Math","floor","random","getRandomNumberArray","numbers","number","add","Array","from","LottoItem","getMatchedCount","winningNumbers","increaseWinningCounts","matchedCount","includes","bonusNumber","prevProps","isModalOpened","isToggled","join","LottoListSection","toggle","onToggle","lottoCount","onChange","map","_","index","WinningNumberForm","onSubmitWinningNumberForm","winningNumberInputs","$input","bonusNumberInput","setWinningNumbers","setBonusNumber","openModal","aria-label","getAnnouncementDate","currentTime","Date","currentDayIndex","getDay","dayIndexGap","announcementDate","setDate","getDate","setHours","setMinutes","setSeconds","LotteryCountDown","remainTime","componentDidMount","tick","intervalId","setInterval","componentWillUnmount","clearInterval","gap","setAnnouncementDate","toLocaleString","time","Main","ResultSection","winningCounts","EarningRateSection","getEarnedMoney","Object","keys","reduce","sum","key","calculateEarningRate","earnedMoney","paidMoney","ResultModal","handleDimmedClick","currentTarget","closeModal","handleEscapeKeyDown","role","aria-modal","onMouseDown","onKeyDown","tabIndex","onClick","viewBox","d","resetAllState","App","mainComponentKey","initialState","resetState","setWinningCounts","rank","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.778e172d.chunk.js","sourcesContent":["export const CLASS_NAME = {\n  MODAL: {\n    CONTAINER: 'modal',\n    INNER: 'modal-inner',\n    CLOSE_BUTTON: 'modal-close-button',\n    RESTART_BUTTON: 'restart-button',\n  },\n};\n\nexport const ID = {\n  MAIN: {\n    PURCHASE_FORM: {\n      INPUT: 'money-input',\n    },\n    WINNING_NUMBER_FORM: {\n      WINNING_NUMBER_FIELDSET: 'winning-number-fieldset',\n      BONUS_NUMBER_FIELDSET: 'bonus-number-fieldset',\n    },\n  },\n};\n\nexport const LOTTO_PRICE = 1000;\n\nexport const LOTTO_VALUE = {\n  NUMBER_COUNT: 6,\n  MIN_NUMBER: 1,\n  MAX_NUMBER: 45,\n\n  RANK: {\n    FIRST: 1,\n    SECOND: 2,\n    THIRD: 3,\n    FOURTH: 4,\n    FIFTH: 5,\n  },\n\n  WINNING_PRIZE: {\n    FIRST: 2000000000,\n    SECOND: 30000000,\n    THIRD: 1500000,\n    FOURTH: 50000,\n    FIFTH: 5000,\n  },\n\n  MATCHED_COUNT: {\n    FIRST: 6,\n    THIRD: 5,\n    FORTH: 4,\n    FIFTH: 3,\n  },\n};\n\nexport const PRIZE_BY_RANK = {\n  [LOTTO_VALUE.RANK.FIRST]: LOTTO_VALUE.WINNING_PRIZE.FIRST,\n  [LOTTO_VALUE.RANK.SECOND]: LOTTO_VALUE.WINNING_PRIZE.SECOND,\n  [LOTTO_VALUE.RANK.THIRD]: LOTTO_VALUE.WINNING_PRIZE.THIRD,\n  [LOTTO_VALUE.RANK.FOURTH]: LOTTO_VALUE.WINNING_PRIZE.FOURTH,\n  [LOTTO_VALUE.RANK.FIFTH]: LOTTO_VALUE.WINNING_PRIZE.FIFTH,\n};\n\nexport const MESSAGE = {\n  ALERT: {\n    INVALID_MONEY_UNIT: '1000원 단위로만 구매 가능합니다.',\n    LOTTO_NOT_EXIST: '구입한 로또가 없습니다.',\n    DUPLICATED_WINNING_NUMBERS: '당첨 번호는 중복될 수 없습니다.',\n  },\n};\n\nexport const ANNOUNCE_DATE = {\n  DAY_INDEX: 6, // 토요일\n  HOUR: 20,\n  MINUTE: 45,\n  SECOND: 0,\n};\n","import { Component } from 'react';\nimport { ID, LOTTO_PRICE, MESSAGE } from '../../constants';\n\nexport default class PurchaseForm extends Component {\n  state = {\n    isActive: true,\n  };\n\n  setLottoCount = (count) => {\n    this.props.setLottoCount(count);\n  };\n\n  onSubmitPurchaseForm = (event) => {\n    event.preventDefault();\n\n    const moneyInput = event.target.elements[ID.MAIN.PURCHASE_FORM.INPUT].valueAsNumber;\n\n    if (!this.isValidPrice(moneyInput)) {\n      alert(MESSAGE.ALERT.INVALID_MONEY_UNIT);\n      return;\n    }\n\n    this.props.setLottoCount(moneyInput / LOTTO_PRICE);\n    this.setState({ isActive: false });\n  };\n\n  isValidPrice = (price) => {\n    return price % LOTTO_PRICE === 0;\n  };\n\n  render() {\n    return (\n      <section className=\"mt-5\">\n        <form className=\"w-100\" onSubmit={this.onSubmitPurchaseForm}>\n          <label htmlFor=\"money-input\" className=\"w-100\">\n            구입할 금액을 입력해주세요. (단위: 원)\n          </label>\n          <div className=\"d-flex justify-space-between items-center mt-1\">\n            <input\n              id=\"money-input\"\n              className=\"money-input flex-auto mr-3\"\n              type=\"number\"\n              placeholder=\"구입 금액\"\n              min=\"1000\"\n              required\n              disabled={this.state.isActive ? false : true}\n            />\n            <button\n              type=\"submit\"\n              className=\"basic-button\"\n              disabled={this.state.isActive ? false : true}\n            >\n              확인\n            </button>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n","export const isSameArray = (array1, array2) => {\n  return array1.length === new Set([...array1, ...array2]).size;\n};\n\nexport const isDuplicatedArray = (array) => {\n  return array.length !== new Set(array).size;\n};\n\nexport const getRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\nexport const getRandomNumberArray = (min, max, length) => {\n  const numbers = new Set();\n\n  while (numbers.size < length) {\n    const number = getRandomNumber(min, max);\n\n    numbers.add(number);\n  }\n\n  return Array.from(numbers);\n};\n","import { Component } from 'react';\nimport { LOTTO_VALUE } from '../../constants';\nimport { getRandomNumberArray } from '../../utils';\n\nexport default class LottoItem extends Component {\n  state = {\n    numbers: getRandomNumberArray(\n      LOTTO_VALUE.MIN_NUMBER,\n      LOTTO_VALUE.MAX_NUMBER,\n      LOTTO_VALUE.NUMBER_COUNT\n    ),\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isModalOpened && this.props.isModalOpened !== prevProps.isModalOpened) {\n      this.increaseWinningCounts();\n    }\n  }\n\n  // 일치하는 개수를 구하는 연산식\n  getMatchedCount = () => {\n    return (\n      this.props.winningNumbers.length +\n      this.state.numbers.length -\n      new Set([...this.props.winningNumbers, ...this.state.numbers]).size\n    );\n  };\n\n  increaseWinningCounts = () => {\n    const matchedCount = this.getMatchedCount();\n\n    if (matchedCount === LOTTO_VALUE.MATCHED_COUNT.FIRST) {\n      this.props.increaseWinningCounts(LOTTO_VALUE.RANK.FIRST);\n    }\n    if (matchedCount === LOTTO_VALUE.MATCHED_COUNT.THIRD) {\n      if (this.state.numbers.includes(this.props.bonusNumber)) {\n        this.props.increaseWinningCounts(LOTTO_VALUE.RANK.SECOND);\n      } else {\n        this.props.increaseWinningCounts(LOTTO_VALUE.RANK.THIRD);\n      }\n    }\n    if (matchedCount === LOTTO_VALUE.MATCHED_COUNT.FOURTH) {\n      this.props.increaseWinningCounts(LOTTO_VALUE.RANK.FOURTH);\n    }\n    if (matchedCount === LOTTO_VALUE.MATCHED_COUNT.FIFTH) {\n      this.props.increaseWinningCounts(LOTTO_VALUE.RANK.FIFTH);\n    }\n  };\n\n  render() {\n    const isToggled = this.props.isToggled;\n\n    return (\n      <li className={`lotto-item ${isToggled ? 'toggle' : ''}`}>\n        <span className=\"lotto-icon\">🎟</span>\n        {isToggled && <span>{[...this.state.numbers].join(', ')}</span>}\n      </li>\n    );\n  }\n}\n","import { Component } from 'react';\nimport LottoItem from './LottoItem';\n\nexport default class LottoListSection extends Component {\n  state = {\n    toggle: false,\n  };\n\n  onToggle = () => {\n    this.setState({\n      toggle: !this.state.toggle,\n    });\n  };\n\n  render() {\n    const lottoCount = this.props.lottoCount;\n\n    return (\n      <section className=\"mt-5\">\n        <div className=\"d-flex justify-space-between items-center\">\n          <div>\n            총 <span>{lottoCount}</span>개를 구매하였습니다.\n          </div>\n          <label className=\"toggle-button\">\n            <input type=\"checkbox\" onChange={this.onToggle} />\n            <span className=\"toggle-slider\"></span>\n          </label>\n        </div>\n        <ul className=\"lotto-list\">\n          {Array.from({ length: lottoCount }).map((_, index) => (\n            <LottoItem\n              key={index}\n              isToggled={this.state.toggle}\n              winningNumbers={this.props.winningNumbers}\n              bonusNumber={this.props.bonusNumber}\n              increaseWinningCounts={this.props.increaseWinningCounts}\n              isModalOpened={this.props.isModalOpened}\n            />\n          ))}\n        </ul>\n      </section>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { ID, MESSAGE } from '../../constants';\nimport { isDuplicatedArray } from '../../utils';\n\nexport default class WinningNumberForm extends Component {\n  onSubmitWinningNumberForm = (event) => {\n    event.preventDefault();\n\n    if (!this.props.lottoCount) {\n      alert(MESSAGE.ALERT.LOTTO_NOT_EXIST);\n      return;\n    }\n\n    const winningNumberInputs =\n      event.target.elements[ID.MAIN.WINNING_NUMBER_FORM.WINNING_NUMBER_FIELDSET].elements;\n    const winningNumbers = Array.from(winningNumberInputs).map(($input) => $input.valueAsNumber);\n    const bonusNumberInput =\n      event.target.elements[ID.MAIN.WINNING_NUMBER_FORM.BONUS_NUMBER_FIELDSET].elements;\n    const [bonusNumber] = Array.from(bonusNumberInput).map(($input) => $input.valueAsNumber);\n\n    if (isDuplicatedArray([...winningNumbers, bonusNumber])) {\n      alert(MESSAGE.ALERT.DUPLICATED_WINNING_NUMBERS);\n      return;\n    }\n\n    this.props.setWinningNumbers(winningNumbers);\n    this.props.setBonusNumber(bonusNumber);\n    this.props.openModal();\n  };\n\n  render() {\n    return (\n      <section className=\"w-100 mt-5\">\n        <form className=\"w-100 mt-1\" onSubmit={this.onSubmitWinningNumberForm}>\n          <label htmlFor=\"first-winning-number\" className=\"w-100\">\n            지난 주 당첨번호 6개와 보너스 넘버 1개를 입력해 주세요.\n          </label>\n          <div className=\"d-flex mt-3\">\n            <fieldset id=\"winning-number-fieldset\" className=\"d-flex flex-col flex-auto\">\n              <legend className=\"text-center font-bold\">당첨번호</legend>\n              <div className=\"d-flex flex-row justify-space-between\">\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"45\"\n                  id=\"first-winning-number\"\n                  className=\"winning-number-input\"\n                  required\n                />\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"45\"\n                  aria-label=\"winning-number\"\n                  required\n                  className=\"winning-number-input\"\n                />\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"45\"\n                  aria-label=\"winning-number\"\n                  required\n                  className=\"winning-number-input\"\n                />\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"45\"\n                  aria-label=\"winning-number\"\n                  required\n                  className=\"winning-number-input\"\n                />\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"45\"\n                  aria-label=\"winning-number\"\n                  required\n                  className=\"winning-number-input\"\n                />\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"45\"\n                  aria-label=\"winning-number\"\n                  required\n                  className=\"winning-number-input\"\n                />\n              </div>\n            </fieldset>\n            <fieldset\n              id=\"bonus-number-fieldset\"\n              className=\"d-flex flex-col justify-center items-center\"\n            >\n              <legend className=\"text-center font-bold\">보너스</legend>\n              <input type=\"number\" className=\"winning-number-input\" min=\"1\" max=\"45\" required />\n            </fieldset>\n          </div>\n          <button className=\"w-100 basic-button mt-3\" type=\"submit\">\n            결과 확인하기\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n","import { ANNOUNCE_DATE } from '../constants';\n\nexport const getAnnouncementDate = () => {\n  const currentTime = new Date();\n  const currentDayIndex = currentTime.getDay();\n  const dayIndexGap = ANNOUNCE_DATE.DAY_INDEX - currentDayIndex;\n  const announcementDate = new Date();\n\n  announcementDate.setDate(announcementDate.getDate() + dayIndexGap);\n  announcementDate.setHours(ANNOUNCE_DATE.HOUR);\n  announcementDate.setMinutes(ANNOUNCE_DATE.MINUTE);\n  announcementDate.setSeconds(ANNOUNCE_DATE.SECOND);\n\n  if (announcementDate <= currentTime) {\n    announcementDate.setDate(announcementDate.getDate() + 7);\n  }\n\n  return announcementDate;\n};\n\nexport const toFormattedTimeString = (time) => {\n  return (\n    Math.floor(time / (1000 * 60 * 60 * 24)) +\n    '일 ' +\n    Math.floor((time / (1000 * 60 * 60)) % 24) +\n    '시간 ' +\n    (Math.floor(time / (1000 * 60)) % 60) +\n    '분 ' +\n    (Math.floor(time / 1000) % 60) +\n    '초'\n  );\n};\n","import { Component } from 'react';\nimport { toFormattedTimeString, getAnnouncementDate } from '../../utils/lottoUtils';\n\nexport default class LotteryCountDown extends Component {\n  state = {\n    remainTime: 0,\n  };\n\n  componentDidMount = () => {\n    this.tick();\n    this.intervalId = setInterval(this.tick, 1000);\n  };\n\n  componentWillUnmount = () => {\n    clearInterval(this.intervalId);\n  };\n\n  tick = () => {\n    const currentTime = new Date();\n    const gap = this.props.announcementDate - currentTime;\n\n    if (gap < 1000) {\n      this.props.setAnnouncementDate(getAnnouncementDate());\n    }\n\n    this.setState({ remainTime: gap });\n  };\n\n  render() {\n    return (\n      <div className=\"mt-5 text-center\">\n        <h3 className=\"m-1\">🎉 당첨 번호 발표 시간 🎉</h3>\n        <p className=\"m-1\">{this.props.announcementDate.toLocaleString('ko-KR')}</p>\n        <p className=\"mt-1\">남은 시간 : {toFormattedTimeString(this.state.remainTime)}</p>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { PurchaseForm, LottoListSection, WinningNumberForm, LotteryCountDown } from '.';\n\nexport default class Main extends Component {\n  state = {\n    winningNumbers: [],\n    bonusNumber: 0,\n  };\n\n  setWinningNumbers = (numbers) => {\n    this.setState({\n      winningNumbers: numbers,\n    });\n  };\n\n  setBonusNumber = (number) => {\n    this.setState({\n      bonusNumber: number,\n    });\n  };\n\n  render() {\n    return (\n      <main className=\"main-container d-flex flex-col\">\n        <h1 className=\"text-center m-0\">🎱 행운의 로또</h1>\n        <PurchaseForm setLottoCount={this.props.setLottoCount} />\n        <LottoListSection\n          isModalOpened={this.props.isModalOpened}\n          lottoCount={this.props.lottoCount}\n          winningNumbers={this.state.winningNumbers}\n          bonusNumber={this.state.bonusNumber}\n          increaseWinningCounts={this.props.increaseWinningCounts}\n        />\n        <WinningNumberForm\n          lottoCount={this.props.lottoCount}\n          setWinningNumbers={this.setWinningNumbers}\n          setBonusNumber={this.setBonusNumber}\n          openModal={this.props.openModal}\n        />\n        <LotteryCountDown\n          announcementDate={this.props.announcementDate}\n          setAnnouncementDate={this.props.setAnnouncementDate}\n        />\n      </main>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { LOTTO_VALUE } from '../../constants';\n\nexport default class ResultSection extends Component {\n  render() {\n    return (\n      <table className=\"mt-3\">\n        <tbody>\n          <tr>\n            <th className=\"p-2\">일치 갯수</th>\n            <th className=\"p-2\">당첨금</th>\n            <th className=\"p-2\">당첨 갯수</th>\n          </tr>\n          <tr className=\"text-center\">\n            <td className=\"p-2\">3개</td>\n            <td className=\"p-2\">{LOTTO_VALUE.WINNING_PRIZE.FIFTH.toLocaleString()}</td>\n            <td className=\"p-2\">\n              <span>{this.props.winningCounts[LOTTO_VALUE.RANK.FIFTH]}</span>개\n            </td>\n          </tr>\n          <tr className=\"text-center\">\n            <td className=\"p-2\">4개</td>\n            <td className=\"p-2\">{LOTTO_VALUE.WINNING_PRIZE.FOURTH.toLocaleString()}</td>\n            <td className=\"p-2\">\n              <span>{this.props.winningCounts[LOTTO_VALUE.RANK.FOURTH]}</span>개\n            </td>\n          </tr>\n          <tr className=\"text-center\">\n            <td className=\"p-2\">5개</td>\n            <td className=\"p-2\">{LOTTO_VALUE.WINNING_PRIZE.THIRD.toLocaleString()}</td>\n            <td className=\"p-2\">\n              <span>{this.props.winningCounts[LOTTO_VALUE.RANK.THIRD]}</span>개\n            </td>\n          </tr>\n          <tr className=\"text-center\">\n            <td className=\"p-2\">5개 + 보너스볼</td>\n            <td className=\"p-2\">{LOTTO_VALUE.WINNING_PRIZE.SECOND.toLocaleString()}</td>\n            <td className=\"p-2\">\n              <span>{this.props.winningCounts[LOTTO_VALUE.RANK.SECOND]}</span>개\n            </td>\n          </tr>\n          <tr className=\"text-center\">\n            <td className=\"p-2\">6개</td>\n            <td className=\"p-2\">{LOTTO_VALUE.WINNING_PRIZE.FIRST.toLocaleString()}</td>\n            <td className=\"p-2\">\n              <span>{this.props.winningCounts[LOTTO_VALUE.RANK.FIRST]}</span>개\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { PRIZE_BY_RANK } from '../../constants';\nexport default class EarningRateSection extends Component {\n  getEarnedMoney = () => {\n    return Object.keys(this.props.winningCounts).reduce(\n      (sum, key) => sum + this.props.winningCounts[key] * PRIZE_BY_RANK[key],\n      0\n    );\n  };\n\n  calculateEarningRate = () => {\n    const earnedMoney = this.getEarnedMoney();\n    const paidMoney = this.props.paidMoney;\n\n    return Math.floor(((earnedMoney - paidMoney) / paidMoney) * 100);\n  };\n\n  render() {\n    return (\n      <div className=\"mt-5 text-center\">\n        🎉🎉 당신의 총 수익률은 <span className=\"font-bold\">{this.calculateEarningRate()}</span>\n        %입니다. 🎉🎉\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { ResultSection, EarningRateSection } from '.';\n\nexport default class ResultModal extends Component {\n  handleDimmedClick = (event) => {\n    if (event.currentTarget === event.target) {\n      this.props.closeModal();\n    }\n  };\n\n  handleEscapeKeyDown = (event) => {\n    if (event.key !== 'Esc' && event.key !== 'Escape') return;\n\n    this.props.closeModal();\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal d-flex justify-center items-center\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        onMouseDown={this.handleDimmedClick}\n        onKeyDown={this.handleEscapeKeyDown}\n        tabIndex=\"0\"\n      >\n        <div className=\"modal-inner d-flex flex-col justify-center\">\n          <button type=\"button\" className=\"modal-close-button\" onClick={this.props.closeModal}>\n            <svg viewBox=\"0 0 40 40\">\n              <path className=\"close-x\" d=\"M 10,10 L 30,30 M 30, 10 L 10, 30\" />\n            </svg>\n          </button>\n          <h1 className=\"text-center m-0\">💵 당첨 결과</h1>\n          <ResultSection winningCounts={this.props.winningCounts} />\n          <EarningRateSection\n            paidMoney={this.props.paidMoney}\n            winningCounts={this.props.winningCounts}\n          />\n          <button\n            type=\"button\"\n            className=\"restart-button basic-button mt-5\"\n            onClick={this.props.resetAllState}\n          >\n            다시 시작하기\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import './index.css';\nimport './css/index.css';\nimport React, { Component } from 'react';\nimport { Main } from './components/Main';\nimport { ResultModal } from './components/Modal';\nimport { LOTTO_VALUE, LOTTO_PRICE } from './constants';\nimport { getAnnouncementDate } from './utils/lottoUtils';\n\nexport default class App extends Component {\n  state = {\n    isModalOpened: false,\n    winningCounts: {\n      [LOTTO_VALUE.RANK.FIRST]: 0,\n      [LOTTO_VALUE.RANK.SECOND]: 0,\n      [LOTTO_VALUE.RANK.THIRD]: 0,\n      [LOTTO_VALUE.RANK.FOURTH]: 0,\n      [LOTTO_VALUE.RANK.FIFTH]: 0,\n    },\n    lottoCount: 0,\n    mainComponentKey: new Date(),\n    announcementDate: getAnnouncementDate(),\n  };\n\n  initialState = this.state;\n\n  resetState = () => {\n    this.setState({ ...this.initialState, mainComponentKey: new Date() });\n  };\n\n  setWinningCounts = (winningCounts) => {\n    this.setState({ winningCounts: winningCounts });\n  };\n\n  increaseWinningCounts = (rank) => {\n    this.setState((prevState) => ({\n      winningCounts: {\n        ...prevState.winningCounts,\n        [rank]: prevState.winningCounts[rank] + 1,\n      },\n    }));\n  };\n\n  setLottoCount = (count) => {\n    this.setState({\n      lottoCount: count,\n    });\n  };\n\n  setAnnouncementDate = (announcementDate) => {\n    this.setState({ announcementDate: announcementDate });\n  };\n\n  openModal = () => {\n    this.setState({\n      isModalOpened: true,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      isModalOpened: false,\n    });\n\n    this.setWinningCounts(this.initialState.winningCounts);\n  };\n\n  render() {\n    return (\n      <div className=\"app d-flex justify-center items-center\">\n        <Main\n          announcementDate={this.state.announcementDate}\n          setAnnouncementDate={this.setAnnouncementDate}\n          isModalOpened={this.state.isModalOpened}\n          openModal={this.openModal}\n          increaseWinningCounts={this.increaseWinningCounts}\n          setWinningCounts={this.setWinningCounts}\n          lottoCount={this.state.lottoCount}\n          setLottoCount={this.setLottoCount}\n          key={this.state.mainComponentKey}\n        />\n        {this.state.isModalOpened && (\n          <ResultModal\n            closeModal={this.closeModal}\n            winningCounts={this.state.winningCounts}\n            paidMoney={this.state.lottoCount * LOTTO_PRICE}\n            resetAllState={this.resetState}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}