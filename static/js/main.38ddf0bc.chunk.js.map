{"version":3,"sources":["constants/index.js","components/LottoForm/PurchaseForm.js","components/LottoForm/LottoListSection.js","utils/index.js","components/LottoForm/WinningNumberForm.js","utils/lottoUtils.js","components/LottoForm/LotteryCountDown.js","components/LottoForm/LottoItem.js","components/LottoForm/LottoForm.js","components/shared/Modal.js","components/LottoResult/LottoResultTable.js","components/LottoResult/EarningRateSection.js","utils/idGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["LOTTO_PRICE","LOTTO_VALUE","NUMBER_COUNT","MIN_NUMBER","MAX_NUMBER","RANK","FIRST","SECOND","THIRD","FOURTH","FIFTH","WINNING_PRIZE","MATCHED_COUNT","WINNING_CONDITION_TEXT","PRIZE_BY_RANK","MESSAGE","INVALID_MONEY_UNIT","LOTTO_NOT_EXIST","DUPLICATED_WINNING_NUMBERS","ANNOUNCE_DATE","PurchaseForm","lottoCount","setLottoCount","setMoneyInput","moneyInput","isActive","isValidPrice","className","onSubmit","event","preventDefault","alert","name","type","placeholder","min","max","value","onChange","target","valueAsNumber","required","disabled","LottoListSection","isLottoListToggled","setIsLottoListToggled","children","checked","getRandomNumber","Math","floor","random","getRandomNumberArray","length","numbers","Set","size","number","add","Array","from","key","WinningNumberForm","setBonusNumber","setWinningNumbers","openModal","winningNumbers","bonusNumber","array","Object","values","id","entries","map","aria-label","keys","indexOf","getAnnouncementDate","currentTime","Date","currentDayIndex","getDay","dayIndexGap","announcementDate","setDate","getDate","setHours","setMinutes","setSeconds","Component","time","setAnnouncementDate","useState","remainTime","setRemainTime","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","gap","toLocaleString","LottoItem","isToggled","join","LottoForm","isModalOpened","lottoInformation","setLottoInformation","lottoItems","creatLottoItem","Modal","closeModal","role","aria-modal","onMouseDown","currentTarget","onKeyDown","tabIndex","onClick","viewBox","d","rankKey","LottoResultTable","winningCounts","EarningRateSection","paidMoney","earnedMoney","reduce","sum","earningRate","idGenerator","getId","initialState","first","second","third","fourth","fifth","sixth","App","setLottoItems","setIsModalOpened","getWinningResult","winningNumberValues","forEach","item","array1","array2","rank","matchedCount","hasBonusNumber","getWinningRank","includes","newLottoItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38ddf0bc.chunk.js","sourcesContent":["export const CLASS_NAME = {\n  MODAL: {\n    CONTAINER: 'modal',\n    INNER: 'modal-inner',\n    CLOSE_BUTTON: 'modal-close-button',\n    RESTART_BUTTON: 'restart-button',\n  },\n};\n\nexport const ID = {\n  MAIN: {\n    WINNING_NUMBER_FORM: {\n      WINNING_NUMBER_FIELDSET: 'winning-number-fieldset',\n      BONUS_NUMBER_FIELDSET: 'bonus-number-fieldset',\n    },\n  },\n};\n\nexport const LOTTO_PRICE = 1000;\n\nexport const LOTTO_VALUE = {\n  NUMBER_COUNT: 6,\n  MIN_NUMBER: 1,\n  MAX_NUMBER: 45,\n\n  RANK: {\n    FIRST: 1,\n    SECOND: 2,\n    THIRD: 3,\n    FOURTH: 4,\n    FIFTH: 5,\n  },\n\n  WINNING_PRIZE: {\n    FIRST: 2000000000,\n    SECOND: 30000000,\n    THIRD: 1500000,\n    FOURTH: 50000,\n    FIFTH: 5000,\n  },\n\n  MATCHED_COUNT: {\n    FIRST: 6,\n    THIRD: 5,\n    FOURTH: 4,\n    FIFTH: 3,\n  },\n\n  WINNING_CONDITION_TEXT: {\n    FIRST: '6개',\n    SECOND: '5개 + 보너스볼',\n    THIRD: '5개',\n    FOURTH: '4개',\n    FIFTH: '3개',\n  },\n};\n\nexport const PRIZE_BY_RANK = {\n  [LOTTO_VALUE.RANK.FIRST]: LOTTO_VALUE.WINNING_PRIZE.FIRST,\n  [LOTTO_VALUE.RANK.SECOND]: LOTTO_VALUE.WINNING_PRIZE.SECOND,\n  [LOTTO_VALUE.RANK.THIRD]: LOTTO_VALUE.WINNING_PRIZE.THIRD,\n  [LOTTO_VALUE.RANK.FOURTH]: LOTTO_VALUE.WINNING_PRIZE.FOURTH,\n  [LOTTO_VALUE.RANK.FIFTH]: LOTTO_VALUE.WINNING_PRIZE.FIFTH,\n};\n\nexport const MESSAGE = {\n  ALERT: {\n    INVALID_MONEY_UNIT: '1000원 단위로만 구매 가능합니다.',\n    LOTTO_NOT_EXIST: '구입한 로또가 없습니다.',\n    DUPLICATED_WINNING_NUMBERS: '당첨 번호는 중복될 수 없습니다.',\n  },\n};\n\nexport const ANNOUNCE_DATE = {\n  DAY_INDEX: 6, // 토요일\n  HOUR: 20,\n  MINUTE: 45,\n  SECOND: 0,\n};\n","import { LOTTO_PRICE, MESSAGE } from '../../constants';\n\nexport default function PurchaseForm({ lottoCount, setLottoCount, setMoneyInput, moneyInput }) {\n  const isActive = lottoCount === 0;\n  const isValidPrice = moneyInput % LOTTO_PRICE === 0;\n\n  const onSubmitPurchaseForm = (event) => {\n    event.preventDefault();\n\n    if (!isValidPrice) {\n      alert(MESSAGE.ALERT.INVALID_MONEY_UNIT);\n      return;\n    }\n\n    setLottoCount(moneyInput / LOTTO_PRICE);\n  };\n\n  const onMoneyInputChange = ({ target }) => {\n    setMoneyInput(target.valueAsNumber);\n  };\n\n  return (\n    <section className=\"mt-5\">\n      <form className=\"w-100\" onSubmit={onSubmitPurchaseForm}>\n        <div className=\"d-flex justify-space-between items-center mt-1\">\n          <label className=\"w-100 mr-3\">\n            구입할 금액을 입력해주세요. (단위: 원)\n            <input\n              className=\"money-input flex-auto mr-3\"\n              name=\"money-input\"\n              type=\"number\"\n              placeholder=\"구입 금액\"\n              min=\"1000\"\n              max=\"100000\"\n              value={moneyInput || ''}\n              onChange={onMoneyInputChange}\n              required\n              disabled={isActive ? false : true}\n            />\n          </label>\n          <button\n            type=\"submit\"\n            className=\"basic-button align-self-end money-submit-button\"\n            disabled={isActive ? false : true}\n          >\n            확인\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n}\n","export default function LottoListSection({\n  lottoCount,\n  isLottoListToggled,\n  setIsLottoListToggled,\n  children,\n}) {\n  const onToggle = () => {\n    setIsLottoListToggled(!isLottoListToggled);\n  };\n\n  return (\n    <section className=\"mt-5\">\n      <div className=\"d-flex justify-space-between items-center\">\n        <div>\n          총 <span>{lottoCount}</span>개를 구매하였습니다.\n        </div>\n        <label className=\"toggle-button\">\n          <input type=\"checkbox\" checked={isLottoListToggled} onChange={onToggle} />\n          <span className=\"toggle-slider\"></span>\n        </label>\n      </div>\n      <ul className=\"lotto-list\">{children}</ul>\n    </section>\n  );\n}\n","export const isSameArray = (array1, array2) => {\n  return array1.length === new Set([...array1, ...array2]).size;\n};\n\nexport const isDuplicatedArray = (array) => {\n  return array.length !== new Set(array).size;\n};\n\nexport const getRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\nexport const getRandomNumberArray = (min, max, length) => {\n  const numbers = new Set();\n\n  while (numbers.size < length) {\n    const number = getRandomNumber(min, max);\n\n    numbers.add(number);\n  }\n\n  return Array.from(numbers);\n};\n\nexport const keyGenerator = (function () {\n  let key = 0;\n\n  const increaseKey = function () {\n    key = key + 1;\n  };\n  return function getKey() {\n    increaseKey();\n    return key;\n  };\n})();\n","import { MESSAGE } from '../../constants';\nimport { isDuplicatedArray } from '../../utils';\n\nexport default function WinningNumberForm({\n  lottoCount,\n  setBonusNumber,\n  setWinningNumbers,\n  openModal,\n  winningNumbers,\n  bonusNumber,\n}) {\n  const onSubmitWinningNumberForm = (event) => {\n    event.preventDefault();\n\n    if (!lottoCount) {\n      alert(MESSAGE.ALERT.LOTTO_NOT_EXIST);\n      return;\n    }\n\n    if (isDuplicatedArray([...Object.values(winningNumbers), bonusNumber])) {\n      alert(MESSAGE.ALERT.DUPLICATED_WINNING_NUMBERS);\n      return;\n    }\n\n    openModal();\n  };\n\n  return (\n    <section className=\"w-100 mt-5\">\n      <form className=\"w-100 mt-1\" onSubmit={onSubmitWinningNumberForm}>\n        <label className=\"w-100\">\n          지난 주 당첨번호 6개와 보너스 넘버 1개를 입력해 주세요.\n          <div className=\"d-flex mt-3\">\n            <fieldset id=\"winning-number-fieldset\" className=\"d-flex flex-col flex-auto\">\n              <legend className=\"text-center font-bold\">당첨번호</legend>\n              <div className=\"d-flex flex-row justify-space-between\">\n                {Object.entries(winningNumbers).map(([key, value]) => (\n                  <input\n                    key={key}\n                    value={value || ''}\n                    onChange={(event) => {\n                      setWinningNumbers({\n                        ...winningNumbers,\n                        [key]: event.target.valueAsNumber,\n                      });\n                    }}\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"45\"\n                    aria-label={`${\n                      Object.keys(winningNumbers).indexOf(key) + 1\n                    }번 쨰 당첨번호 입력`}\n                    required\n                    className=\"winning-number-input\"\n                  />\n                ))}\n              </div>\n            </fieldset>\n            <fieldset\n              id=\"bonus-number-fieldset\"\n              className=\"d-flex flex-col justify-center items-center\"\n            >\n              <legend className=\"text-center font-bold\">보너스</legend>\n              <input\n                type=\"number\"\n                className=\"winning-number-input\"\n                min=\"1\"\n                max=\"45\"\n                value={bonusNumber || ''}\n                onChange={(event) => {\n                  setBonusNumber(event.target.valueAsNumber);\n                }}\n                aria-label=\"보너스 번호 입력\"\n                required\n              />\n            </fieldset>\n          </div>\n        </label>\n        <button className=\"w-100 basic-button mt-3\" type=\"submit\">\n          결과 확인하기\n        </button>\n      </form>\n    </section>\n  );\n}\n","import { ANNOUNCE_DATE } from '../constants';\n\nexport const getAnnouncementDate = () => {\n  const currentTime = new Date();\n  const currentDayIndex = currentTime.getDay();\n  const dayIndexGap = ANNOUNCE_DATE.DAY_INDEX - currentDayIndex;\n  const announcementDate = new Date();\n\n  announcementDate.setDate(announcementDate.getDate() + dayIndexGap);\n  announcementDate.setHours(ANNOUNCE_DATE.HOUR);\n  announcementDate.setMinutes(ANNOUNCE_DATE.MINUTE);\n  announcementDate.setSeconds(ANNOUNCE_DATE.SECOND);\n\n  if (announcementDate <= currentTime) {\n    announcementDate.setDate(announcementDate.getDate() + 7);\n  }\n\n  return announcementDate;\n};\n\nexport const toFormattedTimeString = (time) => {\n  return (\n    Math.floor(time / (1000 * 60 * 60 * 24)) +\n    '일 ' +\n    Math.floor((time / (1000 * 60 * 60)) % 24) +\n    '시간 ' +\n    (Math.floor(time / (1000 * 60)) % 60) +\n    '분 ' +\n    (Math.floor(time / 1000) % 60) +\n    '초'\n  );\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { toFormattedTimeString, getAnnouncementDate } from '../../utils/lottoUtils';\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef(callback);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay === null) return;\n\n    const id = setInterval(savedCallback.current, delay);\n\n    return () => clearInterval(id);\n  }, [delay]);\n};\n\nexport default function Component({ announcementDate, setAnnouncementDate }) {\n  const [remainTime, setRemainTime] = useState(0);\n\n  const tick = () => {\n    const currentTime = new Date();\n    const gap = announcementDate - currentTime;\n\n    if (gap < 1000) {\n      setAnnouncementDate(getAnnouncementDate());\n    }\n\n    setRemainTime(gap);\n  };\n\n  useInterval(tick, 1000);\n\n  return (\n    <div className=\"mt-5 text-center\">\n      <h3 className=\"m-1\">🎉 당첨 번호 발표 시간 🎉</h3>\n      <p className=\"m-1\">{announcementDate.toLocaleString('ko-KR')}</p>\n      <p className=\"mt-1\">남은 시간 : {toFormattedTimeString(remainTime)}</p>\n    </div>\n  );\n}\n","export default function LottoItem({ isToggled, numbers }) {\n  return (\n    <li className={`lotto-item ${isToggled && 'toggle'}`}>\n      <span className=\"lotto-icon\">🎟</span>\n      {isToggled && <span>{[...numbers].join(', ')}</span>}\n    </li>\n  );\n}\n","import { PurchaseForm, LottoListSection, WinningNumberForm, LotteryCountDown } from '.';\nimport LottoItem from './LottoItem';\n\nexport default function LottoForm({\n  isModalOpened,\n  isLottoListToggled,\n  setIsLottoListToggled,\n  openModal,\n  announcementDate,\n  setAnnouncementDate,\n  lottoInformation,\n  setLottoInformation,\n  lottoItems,\n  creatLottoItem,\n}) {\n  const { lottoCount, winningNumbers, bonusNumber, moneyInput } = lottoInformation;\n\n  return (\n    <main className=\"main-container d-flex flex-col\">\n      <h1 className=\"text-center m-0\">🎱 행운의 로또</h1>\n      <PurchaseForm\n        lottoCount={lottoCount}\n        setLottoCount={(lottoCount) => setLottoInformation({ ...lottoInformation, lottoCount })}\n        moneyInput={moneyInput}\n        setMoneyInput={(moneyInput) => setLottoInformation({ ...lottoInformation, moneyInput })}\n        creatLottoItem={creatLottoItem}\n      />\n      <LottoListSection\n        isModalOpened={isModalOpened}\n        isLottoListToggled={isLottoListToggled}\n        setIsLottoListToggled={setIsLottoListToggled}\n        lottoCount={lottoCount}\n        winningNumbers={winningNumbers}\n        bonusNumber={bonusNumber}\n      >\n        {lottoItems.map(({ id, numbers }) => (\n          <LottoItem key={id} isToggled={isLottoListToggled} numbers={numbers} />\n        ))}\n      </LottoListSection>\n      <WinningNumberForm\n        lottoCount={lottoCount}\n        winningNumbers={winningNumbers}\n        setWinningNumbers={(winningNumbers) =>\n          setLottoInformation({ ...lottoInformation, winningNumbers })\n        }\n        bonusNumber={bonusNumber}\n        setBonusNumber={(bonusNumber) => setLottoInformation({ ...lottoInformation, bonusNumber })}\n        openModal={openModal}\n      />\n      <LotteryCountDown\n        announcementDate={announcementDate}\n        setAnnouncementDate={setAnnouncementDate}\n      />\n    </main>\n  );\n}\n","export default function Modal({ closeModal, children }) {\n  const handleDimmedClick = (event) => {\n    if (event.currentTarget === event.target) {\n      closeModal();\n    }\n  };\n\n  const handleEscapeKeyDown = (event) => {\n    if (event.key !== 'Esc' && event.key !== 'Escape') return;\n\n    closeModal();\n  };\n\n  return (\n    <div\n      className=\"modal d-flex justify-center items-center\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      onMouseDown={handleDimmedClick}\n      onKeyDown={handleEscapeKeyDown}\n      tabIndex=\"0\"\n    >\n      <div className=\"modal-inner d-flex flex-col justify-center\">\n        <button type=\"button\" className=\"modal-close-button\" onClick={closeModal}>\n          <svg viewBox=\"0 0 40 40\">\n            <path className=\"close-x\" d=\"M 10,10 L 30,30 M 30, 10 L 10, 30\" />\n          </svg>\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import { LOTTO_VALUE } from '../../constants';\n\nconst rankKey = ['FIRST', 'SECOND', 'THIRD', 'FOURTH', 'FIFTH'];\n\nexport default function LottoResultTable({ winningCounts }) {\n  return (\n    <table className=\"mt-3\">\n      <caption className=\"text-center mb-5 font-bold text-xll\">💵 당첨 결과</caption>\n      <tbody>\n        <tr>\n          <th className=\"p-2\">일치 갯수</th>\n          <th className=\"p-2\">당첨금</th>\n          <th className=\"p-2\">당첨 갯수</th>\n        </tr>\n        {rankKey.map((key) => (\n          <tr className=\"text-center\" key={key}>\n            <td className=\"p-2\">{LOTTO_VALUE.WINNING_CONDITION_TEXT[key]}</td>\n            <td className=\"p-2\">{LOTTO_VALUE.WINNING_PRIZE[key].toLocaleString()}</td>\n            <td className=\"p-2\">\n              <span>{winningCounts[LOTTO_VALUE.RANK[key]]}</span>개\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","import { PRIZE_BY_RANK } from '../../constants';\n\nexport default function EarningRateSection({ winningCounts, paidMoney }) {\n  const earnedMoney = Object.keys(winningCounts).reduce(\n    (sum, key) => sum + winningCounts[key] * PRIZE_BY_RANK[key],\n    0\n  );\n  const earningRate = Math.floor(((earnedMoney - paidMoney) / paidMoney) * 100);\n\n  return (\n    <div className=\"mt-5 text-center\">\n      🎉🎉 당신의 총 수익률은 <span className=\"font-bold\">{earningRate}</span>\n      %입니다. 🎉🎉\n    </div>\n  );\n}\n","const idGenerator = (function () {\n  let id = 0;\n\n  const increaseId = () => {\n    id = id + 1;\n  };\n\n  return {\n    getId: () => {\n      increaseId();\n\n      return id;\n    },\n  };\n})();\n\nexport default idGenerator;\n","import './css/index.css';\nimport React, { useEffect, useState } from 'react';\nimport { LottoForm } from './components/LottoForm';\nimport { Modal } from './components/shared';\nimport { EarningRateSection, LottoResultTable } from './components/LottoResult';\nimport { LOTTO_VALUE, LOTTO_PRICE } from './constants';\nimport { getAnnouncementDate } from './utils/lottoUtils';\nimport { getRandomNumberArray } from './utils';\nimport idGenerator from './utils/idGenerator';\n\nconst initialState = {\n  isModalOpened: false,\n  isLottoListToggled: false,\n\n  lottoItems: [],\n  lottoInformation: {\n    moneyInput: 0,\n    lottoCount: 0,\n    winningNumbers: {\n      first: 0,\n      second: 0,\n      third: 0,\n      fourth: 0,\n      fifth: 0,\n      sixth: 0,\n    },\n    bonusNumber: 0,\n    winningCounts: {\n      [LOTTO_VALUE.RANK.FIRST]: 0,\n      [LOTTO_VALUE.RANK.SECOND]: 0,\n      [LOTTO_VALUE.RANK.THIRD]: 0,\n      [LOTTO_VALUE.RANK.FOURTH]: 0,\n      [LOTTO_VALUE.RANK.FIFTH]: 0,\n    },\n  },\n};\n\nconst getMatchedCount = (array1, array2) => {\n  return array1.length + array2.length - new Set([...array1, ...array2]).size;\n};\n\nconst getWinningRank = (matchedCount, hasBonusNumber) => {\n  switch (matchedCount) {\n    case LOTTO_VALUE.MATCHED_COUNT.FIRST:\n      return LOTTO_VALUE.RANK.FIRST;\n    case LOTTO_VALUE.MATCHED_COUNT.THIRD:\n      return hasBonusNumber ? LOTTO_VALUE.RANK.SECOND : LOTTO_VALUE.RANK.THIRD;\n    case LOTTO_VALUE.MATCHED_COUNT.FOURTH:\n      return LOTTO_VALUE.RANK.FOURTH;\n    case LOTTO_VALUE.MATCHED_COUNT.FIFTH:\n      return LOTTO_VALUE.RANK.FIFTH;\n    default:\n      return;\n  }\n};\n\nexport default function App() {\n  const [lottoInformation, setLottoInformation] = useState(initialState.lottoInformation);\n  const [lottoItems, setLottoItems] = useState(initialState.lottoItems);\n  const [announcementDate, setAnnouncementDate] = useState(getAnnouncementDate());\n\n  const [isModalOpened, setIsModalOpened] = useState(initialState.isModalOpened);\n  const [isLottoListToggled, setIsLottoListToggled] = useState(initialState.isLottoListToggled);\n\n  const { winningCounts, lottoCount, winningNumbers, bonusNumber } = lottoInformation;\n\n  const resetState = () => {\n    setIsModalOpened(initialState.isModalOpened);\n    setIsLottoListToggled(initialState.isLottoListToggled);\n    setAnnouncementDate(getAnnouncementDate());\n    setLottoInformation(initialState.lottoInformation);\n  };\n\n  const getWinningResult = () => {\n    const winningNumberValues = Object.values(winningNumbers);\n\n    lottoItems.forEach((item) => {\n      const matchedCount = getMatchedCount(winningNumberValues, item.numbers);\n      const hasBonusNumber = winningNumberValues.includes(bonusNumber);\n      const rank = getWinningRank(matchedCount, hasBonusNumber);\n\n      if (rank) {\n        setLottoInformation({\n          ...lottoInformation,\n          winningCounts: {\n            ...winningCounts,\n            [rank]: winningCounts[rank] + 1,\n          },\n        });\n      }\n    });\n  };\n\n  const openModal = () => {\n    getWinningResult();\n    setIsModalOpened(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpened(false);\n\n    setLottoInformation({\n      ...lottoInformation,\n      winningCounts: initialState.lottoInformation.winningCounts,\n    });\n  };\n\n  useEffect(() => {\n    const creatLottoItem = () => {\n      const newLottoItems = Array.from({ length: lottoCount }).map(() => {\n        const lottoItem = {\n          id: idGenerator.getId(),\n          numbers: getRandomNumberArray(\n            LOTTO_VALUE.MIN_NUMBER,\n            LOTTO_VALUE.MAX_NUMBER,\n            LOTTO_VALUE.NUMBER_COUNT\n          ),\n        };\n\n        return lottoItem;\n      });\n\n      setLottoItems(newLottoItems);\n    };\n\n    creatLottoItem();\n  }, [lottoCount]);\n\n  return (\n    <div className=\"app d-flex justify-center items-center\">\n      <LottoForm\n        announcementDate={announcementDate}\n        setAnnouncementDate={setAnnouncementDate}\n        isModalOpened={isModalOpened}\n        isLottoListToggled={isLottoListToggled}\n        setIsLottoListToggled={setIsLottoListToggled}\n        openModal={openModal}\n        lottoInformation={lottoInformation}\n        setLottoInformation={setLottoInformation}\n        lottoItems={lottoItems}\n      />\n      {isModalOpened && (\n        <Modal closeModal={closeModal}>\n          <LottoResultTable winningCounts={winningCounts} />\n          <EarningRateSection paidMoney={lottoCount * LOTTO_PRICE} winningCounts={winningCounts} />\n          <button type=\"button\" className=\"restart-button basic-button mt-5\" onClick={resetState}>\n            다시 시작하기\n          </button>\n        </Modal>\n      )}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}