{"version":3,"sources":["constants/index.js","components/LottoForm/PurchaseForm.js","components/LottoForm/LottoListSection.js","utils/index.js","components/LottoForm/WinningNumberForm.js","utils/lottoUtils.js","components/LottoForm/LotteryCountDown.js","components/LottoForm/LottoItem.js","components/LottoForm/LottoForm.js","components/shared/Modal.js","components/LottoResult/LottoResultTable.js","components/LottoResult/EarningRateSection.js","App.js","reportWebVitals.js","index.js"],"names":["ID","WINNING_NUMBER_FORM","WINNING_NUMBER_FIELDSET","BONUS_NUMBER_FIELDSET","LOTTO_PRICE","LOTTO_VALUE","NUMBER_COUNT","MIN_NUMBER","MAX_NUMBER","RANK","FIRST","SECOND","THIRD","FOURTH","FIFTH","WINNING_PRIZE","MATCHED_COUNT","WINNING_CONDITION_TEXT","PRIZE_BY_RANK","MESSAGE","INVALID_MONEY_UNIT","LOTTO_NOT_EXIST","DUPLICATED_WINNING_NUMBERS","ANNOUNCE_DATE","PurchaseForm","lottoCount","setLottoCount","setMoneyInput","moneyInput","isActive","className","onSubmit","event","preventDefault","target","elements","valueAsNumber","alert","name","type","placeholder","min","max","value","onChange","required","disabled","LottoListSection","isLottoListToggled","setIsLottoListToggled","children","checked","getRandomNumber","Math","floor","random","key","WinningNumberForm","setBonusNumber","setWinningNumbers","openModal","winningNumbers","bonusNumber","onWinningNumberInputChange","dataset","array","winningNumberInputs","Array","from","map","$input","bonusNumberInput","length","Set","size","id","Object","keys","index","data-key","aria-label","getAnnouncementDate","currentTime","Date","currentDayIndex","getDay","dayIndexGap","announcementDate","setDate","getDate","setHours","setMinutes","setSeconds","Component","time","setAnnouncementDate","useState","remainTime","setRemainTime","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","gap","toLocaleString","LottoItem","isModalOpened","isToggled","increaseWinningCounts","numbers","number","add","getRandomNumberArray","hasBonusNumber","includes","winningCount","matchedCount","getWinningCount","array1","array2","join","LottoForm","_","Modal","closeModal","role","aria-modal","onMouseDown","currentTarget","onKeyDown","tabIndex","onClick","viewBox","d","rankKey","LottoResultTable","winningCounts","EarningRateSection","paidMoney","earnedMoney","reduce","sum","calculateEarningRate","initialState","first","second","third","fourth","fifth","sixth","App","setIsModalOpened","setWinningCounts","rank","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1499ff4d.chunk.js","sourcesContent":["export const CLASS_NAME = {\n  MODAL: {\n    CONTAINER: 'modal',\n    INNER: 'modal-inner',\n    CLOSE_BUTTON: 'modal-close-button',\n    RESTART_BUTTON: 'restart-button',\n  },\n};\n\nexport const ID = {\n  MAIN: {\n    WINNING_NUMBER_FORM: {\n      WINNING_NUMBER_FIELDSET: 'winning-number-fieldset',\n      BONUS_NUMBER_FIELDSET: 'bonus-number-fieldset',\n    },\n  },\n};\n\nexport const LOTTO_PRICE = 1000;\n\nexport const LOTTO_VALUE = {\n  NUMBER_COUNT: 6,\n  MIN_NUMBER: 1,\n  MAX_NUMBER: 45,\n\n  RANK: {\n    FIRST: 1,\n    SECOND: 2,\n    THIRD: 3,\n    FOURTH: 4,\n    FIFTH: 5,\n  },\n\n  WINNING_PRIZE: {\n    FIRST: 2000000000,\n    SECOND: 30000000,\n    THIRD: 1500000,\n    FOURTH: 50000,\n    FIFTH: 5000,\n  },\n\n  MATCHED_COUNT: {\n    FIRST: 6,\n    THIRD: 5,\n    FOURTH: 4,\n    FIFTH: 3,\n  },\n\n  WINNING_CONDITION_TEXT: {\n    FIRST: '6개',\n    SECOND: '5개 + 보너스볼',\n    THIRD: '5개',\n    FOURTH: '4개',\n    FIFTH: '3개',\n  },\n};\n\nexport const PRIZE_BY_RANK = {\n  [LOTTO_VALUE.RANK.FIRST]: LOTTO_VALUE.WINNING_PRIZE.FIRST,\n  [LOTTO_VALUE.RANK.SECOND]: LOTTO_VALUE.WINNING_PRIZE.SECOND,\n  [LOTTO_VALUE.RANK.THIRD]: LOTTO_VALUE.WINNING_PRIZE.THIRD,\n  [LOTTO_VALUE.RANK.FOURTH]: LOTTO_VALUE.WINNING_PRIZE.FOURTH,\n  [LOTTO_VALUE.RANK.FIFTH]: LOTTO_VALUE.WINNING_PRIZE.FIFTH,\n};\n\nexport const MESSAGE = {\n  ALERT: {\n    INVALID_MONEY_UNIT: '1000원 단위로만 구매 가능합니다.',\n    LOTTO_NOT_EXIST: '구입한 로또가 없습니다.',\n    DUPLICATED_WINNING_NUMBERS: '당첨 번호는 중복될 수 없습니다.',\n  },\n};\n\nexport const ANNOUNCE_DATE = {\n  DAY_INDEX: 6, // 토요일\n  HOUR: 20,\n  MINUTE: 45,\n  SECOND: 0,\n};\n","import { LOTTO_PRICE, MESSAGE } from '../../constants';\n\nexport default function PurchaseForm({ lottoCount, setLottoCount, setMoneyInput, moneyInput }) {\n  const isActive = lottoCount === 0;\n  const isValidPrice = (price) => {\n    return price % LOTTO_PRICE === 0;\n  };\n\n  const onSubmitPurchaseForm = (event) => {\n    event.preventDefault();\n\n    const moneyInput = event.target.elements['money-input'].valueAsNumber;\n\n    if (!isValidPrice(moneyInput)) {\n      alert(MESSAGE.ALERT.INVALID_MONEY_UNIT);\n      return;\n    }\n\n    setLottoCount(moneyInput / LOTTO_PRICE);\n  };\n\n  const onMoneyInputChange = ({ target }) => {\n    setMoneyInput(target.valueAsNumber);\n  };\n\n  return (\n    <section className=\"mt-5\">\n      <form className=\"w-100\" onSubmit={onSubmitPurchaseForm}>\n        <div className=\"d-flex justify-space-between items-center mt-1\">\n          <label className=\"w-100 mr-3\">\n            구입할 금액을 입력해주세요. (단위: 원)\n            <input\n              className=\"money-input flex-auto mr-3\"\n              name=\"money-input\"\n              type=\"number\"\n              placeholder=\"구입 금액\"\n              min=\"1000\"\n              max=\"100000\"\n              value={moneyInput || ''}\n              onChange={onMoneyInputChange}\n              required\n              disabled={isActive ? false : true}\n            />\n          </label>\n          <button\n            type=\"submit\"\n            className=\"basic-button align-self-end money-submit-button\"\n            disabled={isActive ? false : true}\n          >\n            확인\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n}\n","export default function LottoListSection({\n  lottoCount,\n  isLottoListToggled,\n  setIsLottoListToggled,\n  children,\n}) {\n  const onToggle = () => {\n    setIsLottoListToggled(!isLottoListToggled);\n  };\n\n  return (\n    <section className=\"mt-5\">\n      <div className=\"d-flex justify-space-between items-center\">\n        <div>\n          총 <span>{lottoCount}</span>개를 구매하였습니다.\n        </div>\n        <label className=\"toggle-button\">\n          <input type=\"checkbox\" checked={isLottoListToggled} onChange={onToggle} />\n          <span className=\"toggle-slider\"></span>\n        </label>\n      </div>\n      <ul className=\"lotto-list\">{children}</ul>\n    </section>\n  );\n}\n","export const isSameArray = (array1, array2) => {\n  return array1.length === new Set([...array1, ...array2]).size;\n};\n\nexport const isDuplicatedArray = (array) => {\n  return array.length !== new Set(array).size;\n};\n\nexport const getRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\nexport const getRandomNumberArray = (min, max, length) => {\n  const numbers = new Set();\n\n  while (numbers.size < length) {\n    const number = getRandomNumber(min, max);\n\n    numbers.add(number);\n  }\n\n  return Array.from(numbers);\n};\n\nexport const keyGenerator = (function () {\n  let key = 0;\n\n  const increaseKey = function () {\n    key = key + 1;\n  };\n  return function getKey() {\n    increaseKey();\n    return key;\n  };\n})();\n","import { ID, MESSAGE } from '../../constants';\nimport { isDuplicatedArray } from '../../utils';\n\nexport default function WinningNumberForm({\n  lottoCount,\n  setBonusNumber,\n  setWinningNumbers,\n  openModal,\n  winningNumbers,\n  bonusNumber,\n}) {\n  const onSubmitWinningNumberForm = (event) => {\n    event.preventDefault();\n\n    if (!lottoCount) {\n      alert(MESSAGE.ALERT.LOTTO_NOT_EXIST);\n      return;\n    }\n\n    const winningNumberInputs =\n      event.target.elements[ID.MAIN.WINNING_NUMBER_FORM.WINNING_NUMBER_FIELDSET].elements;\n    const winningNumbers = Array.from(winningNumberInputs).map(($input) => $input.valueAsNumber);\n    const bonusNumberInput =\n      event.target.elements[ID.MAIN.WINNING_NUMBER_FORM.BONUS_NUMBER_FIELDSET].elements;\n    const [bonusNumber] = Array.from(bonusNumberInput).map(($input) => $input.valueAsNumber);\n\n    if (isDuplicatedArray([...winningNumbers, bonusNumber])) {\n      alert(MESSAGE.ALERT.DUPLICATED_WINNING_NUMBERS);\n      return;\n    }\n\n    setWinningNumbers(winningNumbers);\n    openModal();\n  };\n\n  const onBonusNumberChange = (event) => {\n    setBonusNumber(event.target.valueAsNumber);\n  };\n\n  const onWinningNumberInputChange = (event) => {\n    setWinningNumbers({\n      ...winningNumbers,\n      [event.target.dataset.key]: event.target.valueAsNumber,\n    });\n  };\n\n  return (\n    <section className=\"w-100 mt-5\">\n      <form className=\"w-100 mt-1\" onSubmit={onSubmitWinningNumberForm}>\n        <label className=\"w-100\">\n          지난 주 당첨번호 6개와 보너스 넘버 1개를 입력해 주세요.\n          <div className=\"d-flex mt-3\">\n            <fieldset id=\"winning-number-fieldset\" className=\"d-flex flex-col flex-auto\">\n              <legend className=\"text-center font-bold\">당첨번호</legend>\n              <div className=\"d-flex flex-row justify-space-between\">\n                {Object.keys(winningNumbers).map((key, index) => (\n                  <input\n                    key={key}\n                    data-key={key}\n                    value={winningNumbers[key] || ''}\n                    onChange={onWinningNumberInputChange}\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"45\"\n                    aria-label={`${index + 1}번 쨰 당첨번호 입력`}\n                    required\n                    className=\"winning-number-input\"\n                  />\n                ))}\n              </div>\n            </fieldset>\n            <fieldset\n              id=\"bonus-number-fieldset\"\n              className=\"d-flex flex-col justify-center items-center\"\n            >\n              <legend className=\"text-center font-bold\">보너스</legend>\n              <input\n                type=\"number\"\n                className=\"winning-number-input\"\n                min=\"1\"\n                max=\"45\"\n                value={bonusNumber || ''}\n                onChange={onBonusNumberChange}\n                aria-label=\"보너스 번호 입력\"\n                required\n              />\n            </fieldset>\n          </div>\n        </label>\n        <button className=\"w-100 basic-button mt-3\" type=\"submit\">\n          결과 확인하기\n        </button>\n      </form>\n    </section>\n  );\n}\n","import { ANNOUNCE_DATE } from '../constants';\n\nexport const getAnnouncementDate = () => {\n  const currentTime = new Date();\n  const currentDayIndex = currentTime.getDay();\n  const dayIndexGap = ANNOUNCE_DATE.DAY_INDEX - currentDayIndex;\n  const announcementDate = new Date();\n\n  announcementDate.setDate(announcementDate.getDate() + dayIndexGap);\n  announcementDate.setHours(ANNOUNCE_DATE.HOUR);\n  announcementDate.setMinutes(ANNOUNCE_DATE.MINUTE);\n  announcementDate.setSeconds(ANNOUNCE_DATE.SECOND);\n\n  if (announcementDate <= currentTime) {\n    announcementDate.setDate(announcementDate.getDate() + 7);\n  }\n\n  return announcementDate;\n};\n\nexport const toFormattedTimeString = (time) => {\n  return (\n    Math.floor(time / (1000 * 60 * 60 * 24)) +\n    '일 ' +\n    Math.floor((time / (1000 * 60 * 60)) % 24) +\n    '시간 ' +\n    (Math.floor(time / (1000 * 60)) % 60) +\n    '분 ' +\n    (Math.floor(time / 1000) % 60) +\n    '초'\n  );\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { toFormattedTimeString, getAnnouncementDate } from '../../utils/lottoUtils';\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef(callback);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay === null) return;\n\n    const id = setInterval(savedCallback.current, delay);\n\n    return () => clearInterval(id);\n  }, [delay]);\n};\n\nexport default function Component({ announcementDate, setAnnouncementDate }) {\n  const [remainTime, setRemainTime] = useState(0);\n\n  const tick = () => {\n    const currentTime = new Date();\n    const gap = announcementDate - currentTime;\n\n    if (gap < 1000) {\n      setAnnouncementDate(getAnnouncementDate());\n    }\n\n    setRemainTime(gap);\n  };\n\n  useInterval(tick, 1000);\n\n  return (\n    <div className=\"mt-5 text-center\">\n      <h3 className=\"m-1\">🎉 당첨 번호 발표 시간 🎉</h3>\n      <p className=\"m-1\">{announcementDate.toLocaleString('ko-KR')}</p>\n      <p className=\"mt-1\">남은 시간 : {toFormattedTimeString(remainTime)}</p>\n    </div>\n  );\n}\n","import { useEffect, useRef } from 'react';\nimport { LOTTO_VALUE } from '../../constants';\nimport { getRandomNumberArray } from '../../utils';\n\nconst getMatchedCount = (array1, array2) => {\n  return array1.length + array2.length - new Set([...array1, ...array2]).size;\n};\n\nconst getWinningCount = (matchedCount, hasBonusNumber) => {\n  switch (matchedCount) {\n    case LOTTO_VALUE.MATCHED_COUNT.FIRST:\n      return LOTTO_VALUE.RANK.FIRST;\n    case LOTTO_VALUE.MATCHED_COUNT.THIRD:\n      return hasBonusNumber ? LOTTO_VALUE.RANK.SECOND : LOTTO_VALUE.RANK.THIRD;\n    case LOTTO_VALUE.MATCHED_COUNT.FOURTH:\n      return LOTTO_VALUE.RANK.FOURTH;\n    case LOTTO_VALUE.MATCHED_COUNT.FIFTH:\n      return LOTTO_VALUE.RANK.FIFTH;\n    default:\n      return;\n  }\n};\n\nexport default function LottoItem({\n  bonusNumber,\n  winningNumbers,\n  isModalOpened,\n  isToggled,\n  increaseWinningCounts,\n}) {\n  const numbers = useRef(\n    getRandomNumberArray(LOTTO_VALUE.MIN_NUMBER, LOTTO_VALUE.MAX_NUMBER, LOTTO_VALUE.NUMBER_COUNT)\n  );\n\n  useEffect(() => {\n    if (isModalOpened) {\n      const hasBonusNumber = numbers.current.includes(bonusNumber);\n      const matchedCount = getMatchedCount(winningNumbers, numbers.current);\n      const winningCount = getWinningCount(matchedCount, hasBonusNumber);\n\n      winningCount && increaseWinningCounts(winningCount);\n    }\n  }, [isModalOpened]);\n\n  return (\n    <li className={`lotto-item ${isToggled ? 'toggle' : ''}`}>\n      <span className=\"lotto-icon\">🎟</span>\n      {isToggled && <span>{[...numbers.current].join(', ')}</span>}\n    </li>\n  );\n}\n","import { PurchaseForm, LottoListSection, WinningNumberForm, LotteryCountDown } from '.';\nimport LottoItem from './LottoItem';\n\nexport default function LottoForm({\n  setLottoCount,\n  moneyInput,\n  setMoneyInput,\n  isModalOpened,\n  lottoCount,\n  winningNumbers,\n  bonusNumber,\n  increaseWinningCounts,\n  isLottoListToggled,\n  setIsLottoListToggled,\n  setWinningNumbers,\n  setBonusNumber,\n  openModal,\n  announcementDate,\n  setAnnouncementDate,\n}) {\n  return (\n    <main className=\"main-container d-flex flex-col\">\n      <h1 className=\"text-center m-0\">🎱 행운의 로또</h1>\n      <PurchaseForm\n        setLottoCount={setLottoCount}\n        moneyInput={moneyInput}\n        setMoneyInput={setMoneyInput}\n        lottoCount={lottoCount}\n      />\n      <LottoListSection\n        isModalOpened={isModalOpened}\n        lottoCount={lottoCount}\n        winningNumbers={winningNumbers}\n        bonusNumber={bonusNumber}\n        increaseWinningCounts={increaseWinningCounts}\n        isLottoListToggled={isLottoListToggled}\n        setIsLottoListToggled={setIsLottoListToggled}\n      >\n        {Array.from({ length: lottoCount }).map((_, index) => (\n          <LottoItem\n            key={index}\n            isToggled={isLottoListToggled}\n            winningNumbers={winningNumbers}\n            bonusNumber={bonusNumber}\n            increaseWinningCounts={increaseWinningCounts}\n            isModalOpened={isModalOpened}\n          />\n        ))}\n      </LottoListSection>\n      <WinningNumberForm\n        lottoCount={lottoCount}\n        setWinningNumbers={setWinningNumbers}\n        winningNumbers={winningNumbers}\n        bonusNumber={bonusNumber}\n        setBonusNumber={setBonusNumber}\n        openModal={openModal}\n      />\n      <LotteryCountDown\n        announcementDate={announcementDate}\n        setAnnouncementDate={setAnnouncementDate}\n      />\n    </main>\n  );\n}\n","export default function Modal({ closeModal, children }) {\n  const handleDimmedClick = (event) => {\n    if (event.currentTarget === event.target) {\n      closeModal();\n    }\n  };\n\n  const handleEscapeKeyDown = (event) => {\n    if (event.key !== 'Esc' && event.key !== 'Escape') return;\n\n    closeModal();\n  };\n\n  return (\n    <div\n      className=\"modal d-flex justify-center items-center\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      onMouseDown={handleDimmedClick}\n      onKeyDown={handleEscapeKeyDown}\n      tabIndex=\"0\"\n    >\n      <div className=\"modal-inner d-flex flex-col justify-center\">\n        <button type=\"button\" className=\"modal-close-button\" onClick={closeModal}>\n          <svg viewBox=\"0 0 40 40\">\n            <path className=\"close-x\" d=\"M 10,10 L 30,30 M 30, 10 L 10, 30\" />\n          </svg>\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import { LOTTO_VALUE } from '../../constants';\n\nconst rankKey = ['FIRST', 'SECOND', 'THIRD', 'FOURTH', 'FIFTH'];\n\nexport default function LottoResultTable({ winningCounts }) {\n  return (\n    <table className=\"mt-3\">\n      <caption className=\"text-center mb-5 font-bold text-xll\">💵 당첨 결과</caption>\n      <tbody>\n        <tr>\n          <th className=\"p-2\">일치 갯수</th>\n          <th className=\"p-2\">당첨금</th>\n          <th className=\"p-2\">당첨 갯수</th>\n        </tr>\n        {rankKey.map((key) => (\n          <tr className=\"text-center\" key={key}>\n            <td className=\"p-2\">{LOTTO_VALUE.WINNING_CONDITION_TEXT[key]}</td>\n            <td className=\"p-2\">{LOTTO_VALUE.WINNING_PRIZE[key].toLocaleString()}</td>\n            <td className=\"p-2\">\n              <span>{winningCounts[LOTTO_VALUE.RANK[key]]}</span>개\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","import { PRIZE_BY_RANK } from '../../constants';\n\nexport default function EarningRateSection({ winningCounts, paidMoney }) {\n  const getEarnedMoney = () => {\n    return Object.keys(winningCounts).reduce(\n      (sum, key) => sum + winningCounts[key] * PRIZE_BY_RANK[key],\n      0\n    );\n  };\n\n  const calculateEarningRate = () => {\n    const earnedMoney = getEarnedMoney();\n\n    return Math.floor(((earnedMoney - paidMoney) / paidMoney) * 100);\n  };\n\n  return (\n    <div className=\"mt-5 text-center\">\n      🎉🎉 당신의 총 수익률은 <span className=\"font-bold\">{calculateEarningRate()}</span>\n      %입니다. 🎉🎉\n    </div>\n  );\n}\n","import './css/index.css';\nimport React, { useState } from 'react';\nimport { LottoForm } from './components/LottoForm';\nimport { Modal } from './components/shared';\nimport { EarningRateSection, LottoResultTable } from './components/LottoResult';\nimport { LOTTO_VALUE, LOTTO_PRICE } from './constants';\nimport { getAnnouncementDate } from './utils/lottoUtils';\n\nconst initialState = {\n  isModalOpened: false,\n  isLottoListToggled: false,\n  winningCounts: {\n    [LOTTO_VALUE.RANK.FIRST]: 0,\n    [LOTTO_VALUE.RANK.SECOND]: 0,\n    [LOTTO_VALUE.RANK.THIRD]: 0,\n    [LOTTO_VALUE.RANK.FOURTH]: 0,\n    [LOTTO_VALUE.RANK.FIFTH]: 0,\n  },\n  lottoCount: 0,\n  announcementDate: getAnnouncementDate(),\n  winningNumbers: {\n    first: 0,\n    second: 0,\n    third: 0,\n    fourth: 0,\n    fifth: 0,\n    sixth: 0,\n  },\n  bonusNumber: 0,\n  moneyInput: 0,\n};\n\nexport default function App() {\n  const [isModalOpened, setIsModalOpened] = useState(initialState.isModalOpened);\n  const [isLottoListToggled, setIsLottoListToggled] = useState(initialState.isLottoListToggled);\n  const [winningCounts, setWinningCounts] = useState(initialState.winningCounts);\n  const [lottoCount, setLottoCount] = useState(initialState.lottoCount);\n  const [announcementDate, setAnnouncementDate] = useState(initialState.announcementDate);\n  const [winningNumbers, setWinningNumbers] = useState(initialState.winningNumbers);\n  const [bonusNumber, setBonusNumber] = useState(initialState.bonusNumber);\n  const [moneyInput, setMoneyInput] = useState(initialState.moneyInput);\n\n  const resetState = () => {\n    setIsModalOpened(initialState.isModalOpened);\n    setIsLottoListToggled(initialState.isLottoListToggled);\n    setWinningCounts(initialState.winningCounts);\n    setLottoCount(initialState.lottoCount);\n    setAnnouncementDate(initialState.announcementDate);\n    setWinningNumbers(initialState.winningNumbers);\n    setBonusNumber(initialState.bonusNumber);\n    setMoneyInput(initialState.moneyInput);\n  };\n\n  const increaseWinningCounts = (rank) => {\n    setWinningCounts({\n      ...winningCounts,\n      [rank]: winningCounts[rank] + 1,\n    });\n  };\n\n  const openModal = () => {\n    setIsModalOpened(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpened(false);\n\n    setWinningCounts(initialState.winningCounts);\n  };\n\n  return (\n    <div className=\"app d-flex justify-center items-center\">\n      <LottoForm\n        announcementDate={announcementDate}\n        setAnnouncementDate={setAnnouncementDate}\n        isModalOpened={isModalOpened}\n        isLottoListToggled={isLottoListToggled}\n        setIsLottoListToggled={setIsLottoListToggled}\n        openModal={openModal}\n        moneyInput={moneyInput}\n        setMoneyInput={setMoneyInput}\n        increaseWinningCounts={increaseWinningCounts}\n        setWinningCounts={setWinningCounts}\n        lottoCount={lottoCount}\n        setLottoCount={setLottoCount}\n        winningNumbers={winningNumbers}\n        bonusNumber={bonusNumber}\n        setWinningNumbers={setWinningNumbers}\n        setBonusNumber={setBonusNumber}\n      />\n      {isModalOpened && (\n        <Modal closeModal={closeModal}>\n          <LottoResultTable winningCounts={winningCounts} />\n          <EarningRateSection paidMoney={lottoCount * LOTTO_PRICE} winningCounts={winningCounts} />\n          <button type=\"button\" className=\"restart-button basic-button mt-5\" onClick={resetState}>\n            다시 시작하기\n          </button>\n        </Modal>\n      )}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}